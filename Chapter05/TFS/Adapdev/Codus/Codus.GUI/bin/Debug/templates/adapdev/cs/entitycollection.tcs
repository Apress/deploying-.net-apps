#*<?xml version="1.0" encoding="utf-8"?>
<config xmlns="http://tempuri.org/DynamicGUI.xsd">
    <file name="${table}EntityCollection.cs" />
	<textbox name="namespace" label="Namespace" />
</config>
*#
#set( $dao = "${tableschema.Alias}DAO" )
#set( $table = "${tableschema.Alias}" )
#set( $entity = "${tableschema.Alias}Entity" )
/******************************************
 * Auto-generated by Codus
 * $datetimenow
 ******************************************/
using System;
using System.Collections;
using Adapdev.Collections;
using ${namespace};

namespace ${namespace}.Collections 
{
	[Serializable()]
	public class ${entity}Collection : SortableCollectionBase 
	{

		public ${entity}Collection() 
		{
		}

		public ${entity}Collection(IList value) 
		{
			this.AddRange(value);
		}

		public ${entity}Collection(${entity}[] value) 
		{
			this.AddRange(value);
		}

		public ${entity} this[int index] 
		{
			get 
			{
				return ((${entity})(List[index]));
			}
			set 
			{
				List[index] = value;
			}
		}

		public int Add(${entity} value) 
		{
			return List.Add(value);
		}

		public void AddRange(${entity}[] value) 
		{
			for (int i = 0; (i < value.Length); i = (i + 1)) 
			{
				this.Add(value[i]);
			}
		}

		public void AddRange(IList value) 
		{
			for (int i = 0; (i < value.Count); i = (i + 1)) 
			{
				this.Add((${entity})value[i]);
			}
		}

		public bool Contains(${entity} value) 
		{
			return List.Contains(value);
		}

		public void CopyTo(${entity}[] array, int index) 
		{
			List.CopyTo(array, index);
		}

		public int IndexOf(${entity} value) 
		{
			return List.IndexOf(value);
		}

		public void Insert(int index, ${entity} value) 
		{
			List.Insert(index, value);
		}

		public new ${entity}Enumerator GetEnumerator() 
		{
			return new ${entity}Enumerator(this);
		}

		public void Remove(${entity} value) 
		{
			List.Remove(value);
		}

	}
}
