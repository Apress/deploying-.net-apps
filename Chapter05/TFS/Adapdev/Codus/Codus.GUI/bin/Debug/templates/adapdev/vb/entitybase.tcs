#set( $dao = "${tableschema.Alias}DAO" )
#set( $table = "${tableschema.Alias}" )
#set( $entity = "${tableschema.Alias}Entity" )
'******************************************
'* Auto-generated by Codus
'* $datetimenow
'******************************************/
imports Adapdev.Text

namespace $namespace

	''' <summary>
	''' An object representation of the $databaseschema.Name $table table
	''' </summary>
	<Serializable>	public MustInherit class ${entity}Base
	
#foreach($column in $tableschema.SortedColumns.Values)
		private $column.MemberName as $column.NetType = $column.DefaultValue
#end

#foreach($column in $tableschema.SortedColumns.Values)
		<XmlElement(ElementName := "${namespace}")>
		public property $column.Alias as $column.NetType 
			get
				return me.${column.MemberName}
			end get
			set (byVal value as $column.NetType)
				me.${column.MemberName} = value
			end set
		end property
		
#end
        
		''' <summary>
		''' Returns a string representation of the object, displaying all property and field names and values.
		''' </summary>
		public overrides function ToString() as string
			return StringUtil.ToString(me)
		end function
		
	#foreach($column in $tableschema.PrimaryKeys.Values)

		#foreach($fk in $column.ForeignKeyTables)
		#if($fk.ForeignTable.IsActive)
		
		'public readonly property ${fk.ForeignTable.Alias}By${fk.ForeignColumn.Alias} as ${fk.ForeignTable.Alias}Collection
		'	get
		'		return new ${fk.ForeignTable.Alias}Collection(new ${fk.ForeignTable.Alias}DAO().SelectAllBy${fk.ForeignColumn.Alias}(me.${fk.Column.MemberName}))
		'	end get
		'end property
		
		#end
		#end
	
	#end
	end class
	
end namespace