#set( $dao = "${tableschema.Alias}DAO" )
#set( $table = "${tableschema.Alias}" )
#set( $entity = "${tableschema.Alias}Entity" )
'******************************************
'* Autogenerated by Codus
'* $datetimenow
'******************************************/
imports System
imports System.Collections
imports Adapdev.Collections
imports System.Runtime.Serialization
imports System.IO

namespace $namespace

	<Serializable()> public class ${entity}Collection
		inherits SortableCollectionBase 

		public sub new()
		
		end sub
		
		public sub new(value as IList) 
			me.AddRange(value)
		end sub
		
		public sub new(value as ${entity}()) 
			me.AddRange(value)
		end sub
		
		public default property Arr(index as integer) as ${entity}

			get 
				return directcast(List(index), ${entity})
			end get

			set 
				List(index) = value
			end set
		end property

		public function Add(value as ${entity}) as integer 
			return List.Add(value)
		end function
		
		public sub AddRange(value as ${entity}()) 
			for each entity as ${entity} in value
				me.Add(entity)
			next
		end sub
		
		public sub AddRange(value as IList ) 
			for each entity as object in value
				me.Add(directcast(entity, ${entity}))
			next
		end sub

		public function Contains(value as ${entity}) as boolean 
			return List.Contains(value)
		end function
		
		public sub CopyTo(byref array as ${entity}(), index as integer) 
			List.CopyTo(array, index)
		end sub
		
		public function IndexOf(value as ${entity}) as integer
			return List.IndexOf(value)
		end function
		
		public sub Insert(index as integer, value as ${entity}) 
			List.Insert(index, value)
		end sub
		
		public shadows function GetEnumerator() as ${entity}Enumerator 
			return new ${entity}Enumerator(me)
		end function
		
		public sub Remove(value as ${entity}) 
			List.Remove(value)
		end sub
	end class
	
end namespace